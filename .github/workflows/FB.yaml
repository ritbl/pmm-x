name: Build FB

on:
  ##  push:
  ##    branches: [ "main" ]
  push:
    branches:
      - "FB/**"

jobs:
  core-be:
    strategy:
      matrix:
        target:
          - {machine: [self-hosted, star01] }
          - {machine: [buildjet-4vcpu-ubuntu-2204-arm, ARM64]}
    runs-on: ${{ matrix.target.machine }}
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        if: steps.changes.outputs.core-be == 'true' && ${{ contains(matrix.target.machine, 'star01') }}
        run: |
          echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S rm -rf ${GITHUB_WORKSPACE}
          mkdir ${GITHUB_WORKSPACE}
      - name: Check out code
        uses: percona-platform/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            core-be:
              - 'components/core/**'
      # build
      - name: Build
        if: steps.changes.outputs.core-be == 'true'
        run: TAG=`echo "${{ github.ref_name }}" | sed -e "s/^FB\///"` make build-x-core-be
      - name: Upload to S3
        if: steps.changes.outputs.core-be == 'true'
        uses: ritbl/gha-aws@v1.0.1
        with:
          entrypoint: "./s3-publish.sh"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          AWS_DEFAULT_REGION: "eu-central-1"
  exporters-be:
    strategy:
      matrix:
        target:
          - {machine: [self-hosted, star01] }
          - {machine: [buildjet-4vcpu-ubuntu-2204-arm, ARM64]}
    runs-on: ${{ matrix.target.machine }}
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        if: steps.changes.outputs.exporters-be == 'true' && ${{ contains(matrix.target.machine, 'star01') }}
        run: |
          echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S rm -rf ${GITHUB_WORKSPACE}
          mkdir ${GITHUB_WORKSPACE}
      - name: Check out code
        uses: percona-platform/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            exporters-be:
              - 'components/exporters/**'
      # Build
      - name: Build
        if: steps.changes.outputs.exporters-be == 'true'
        run: TAG=`echo "${{ github.ref_name }}" | sed -e "s/^FB\///"` make build-x-exporters-be
      - name: Upload to S3
        if: steps.changes.outputs.exporters-be == 'true'
        uses: ritbl/gha-aws@v1.0.1
        with:
          entrypoint: "./s3-publish.sh"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          AWS_DEFAULT_REGION: "eu-central-1"
  grafana-fe:
    strategy:
      matrix:
        target:
          - {machine: [self-hosted, star01]}
    runs-on: ${{ matrix.target.machine }}
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        if: ${{ contains(matrix.target.machine, 'star01') }}
        run: |
          echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S rm -rf ${GITHUB_WORKSPACE}
          mkdir ${GITHUB_WORKSPACE}
      - name: Check out code
        uses: percona-platform/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            grafana-fe:
              - 'components/grafana/**'
      # Build
      - name: Build
        if: steps.changes.outputs.grafana-fe == 'true'
        run: TAG=`echo "${{ github.ref_name }}" | sed -e "s/^FB\///"` make build-x-grafana-fe
      - name: Upload to S3
        if: steps.changes.outputs.grafana-fe == 'true'
        uses: ritbl/gha-aws@v1.0.1
        with:
          entrypoint: "./s3-publish.sh"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          AWS_DEFAULT_REGION: "eu-central-1"
  grafana-be:
    strategy:
      matrix:
        target:
          - {machine: [self-hosted, star01] }
          - {machine: [buildjet-4vcpu-ubuntu-2204-arm, ARM64]}
    runs-on: ${{ matrix.target.machine }}
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        if: ${{ contains(matrix.target.machine, 'star01') }}
        run: |
          echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S rm -rf ${GITHUB_WORKSPACE}
          mkdir ${GITHUB_WORKSPACE}
      - name: Check out code
        uses: percona-platform/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            grafana-be:
              - 'components/grafana/**'
      - name: Build
        if: steps.changes.outputs.grafana-be == 'true'
        run: TAG=`echo "${{ github.ref_name }}" | sed -e "s/^FB\///"` make build-x-grafana-be
      - name: Upload to S3
        if: steps.changes.outputs.grafana-be == 'true'
        uses: ritbl/gha-aws@v1.0.1
        with:
          entrypoint: "./s3-publish.sh"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
          AWS_DEFAULT_REGION: "eu-central-1"
  foundation:
    strategy:
      matrix:
        target:
          - {machine: [self-hosted, star01] }
    runs-on: ${{ matrix.target.machine }}
    steps:
      - name: cleanup #https://github.com/actions/checkout/issues/211
        if: ${{ contains(matrix.target.machine, 'star01') }}
        run: |
          echo ${{ secrets.DEPLOY_PASSWORD }} | sudo -S rm -rf ${GITHUB_WORKSPACE}
          mkdir ${GITHUB_WORKSPACE}
      - name: Check out code
        uses: percona-platform/checkout@v3
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            foundation:
              - 'components/foundation/**'
      - name: Login to Docker Hub
        if: steps.changes.outputs.foundation == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}
      - name: Build
        if: steps.changes.outputs.foundation == 'true'
        run: TAG=`echo "${{ github.ref_name }}" | sed -e "s/^FB\///"` make build-x-foundation
#  pmm-x:
#    needs: [core-be, exporters-be, grafana-fe, grafana-be, foundation]
#    strategy:
#      matrix:
#        target:
#          - {machine: [self-hosted, star01], key: hosted-amd64 }
#    runs-on: ${{ matrix.target.machine }}
#    steps:
#      - name: Check out code
#        uses: percona-platform/checkout@v3
#      - name: Cache
#        uses: actions/cache@v3
#        with:
#          path: deps
#          key: ${{ matrix.target.key }}-deps
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USER }}
#          password: ${{ secrets.DOCKER_PAT }}
#      - name: Build
#        run: TAG=`echo "${{ github.ref_name }}" | sed -e "s/^FB\///"` make build-pmm-x
